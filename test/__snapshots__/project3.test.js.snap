// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Matches the snapshot. 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "canarybucketdeploymentAwsCliLayer8B1E9611",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3canarybucket5010CF8B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3canarybucket5010CF8B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "project3canarybucket5010CF8B",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DynamoDBLambda863ACDF8": {
      "DependsOn": [
        "lambdadynamodbroleDefaultPolicy66651F02",
        "lambdadynamodbroleD0C7968B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d5f753ca31793578c01f8db6811a07bd6968b6ff3e551875ef1ba08e90c5f499.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "WebsiteMonitoringTableC78D4198",
            },
          },
        },
        "Handler": "dynamodb.handler",
        "Role": {
          "Fn::GetAtt": [
            "lambdadynamodbroleD0C7968B",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "DynamoDBLambdaAllowInvokeTestProject3Stackemailtopic7B0C646DBD807BE5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DynamoDBLambda863ACDF8",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "emailtopic3DE2DBFE",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DynamoDBLambdaemailtopic4779D384": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "DynamoDBLambda863ACDF8",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "emailtopic3DE2DBFE",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "WebsiteMonitoringTableC78D4198": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "url",
            "AttributeType": "S",
          },
          {
            "AttributeName": "timestamp",
            "AttributeType": "S",
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "url",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "timestamp",
            "KeyType": "RANGE",
          },
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "alarmhttpswwwapplecomauavailability1EA82D43": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.apple.com/au Availability Metric",
        "AlarmName": "alarm-https://www.apple.com/au-availability",
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.apple.com/au",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageAvailability",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmhttpswwwapplecomaubrokenlinksEC29CC50": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.apple.com/au BrokenLinks Metric",
        "AlarmName": "alarm-https://www.apple.com/au-broken-links",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.apple.com/au",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageBrokenLinks",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmhttpswwwapplecomaulatencyED023FAD": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.apple.com/au Latency Metric",
        "AlarmName": "alarm-https://www.apple.com/au-latency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.apple.com/au",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageExecutionTime",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 3000,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmhttpswwwporschecomaustraliaavailability107AF34E": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.porsche.com/australia Availability Metric",
        "AlarmName": "alarm-https://www.porsche.com/australia-availability",
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.porsche.com/australia",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageAvailability",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmhttpswwwporschecomaustraliabrokenlinksB6504E35": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.porsche.com/australia BrokenLinks Metric",
        "AlarmName": "alarm-https://www.porsche.com/australia-broken-links",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.porsche.com/australia",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageBrokenLinks",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmhttpswwwporschecomaustralialatency9BAC9CDF": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.porsche.com/australia Latency Metric",
        "AlarmName": "alarm-https://www.porsche.com/australia-latency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.porsche.com/australia",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageExecutionTime",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 3000,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmhttpswwwswinburneeduauavailability5BA5C6E1": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.swinburne.edu.au Availability Metric",
        "AlarmName": "alarm-https://www.swinburne.edu.au-availability",
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.swinburne.edu.au",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageAvailability",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmhttpswwwswinburneeduaubrokenlinks5DD715AB": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.swinburne.edu.au BrokenLinks Metric",
        "AlarmName": "alarm-https://www.swinburne.edu.au-broken-links",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.swinburne.edu.au",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageBrokenLinks",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmhttpswwwswinburneeduaulatency22D9EC63": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for https://www.swinburne.edu.au Latency Metric",
        "AlarmName": "alarm-https://www.swinburne.edu.au-latency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "url",
            "Value": "https://www.swinburne.edu.au",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PageExecutionTime",
        "Namespace": "MonitorWebsites",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 3000,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmmaxlatency384A3E63": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for Max Latency Metric",
        "AlarmName": "alarm-max-latency",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "MAX(METRICS())",
            "Id": "expr_1",
            "Label": "Maximum Execution Time",
          },
          {
            "Id": "ml0",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "url",
                    "Value": "https://www.swinburne.edu.au",
                  },
                ],
                "MetricName": "PageExecutionTime",
                "Namespace": "MonitorWebsites",
              },
              "Period": 900,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "ml1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "url",
                    "Value": "https://www.porsche.com/australia",
                  },
                ],
                "MetricName": "PageExecutionTime",
                "Namespace": "MonitorWebsites",
              },
              "Period": 900,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "ml2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "url",
                    "Value": "https://www.apple.com/au",
                  },
                ],
                "MetricName": "PageExecutionTime",
                "Namespace": "MonitorWebsites",
              },
              "Period": 900,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 3000,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "alarmminreachable86FDB0B7": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "emailtopic3DE2DBFE",
          },
        ],
        "AlarmDescription": "Alarm for Min Availability Metric",
        "AlarmName": "alarm-min-reachable",
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "SUM(METRICS())",
            "Id": "expr_1",
            "Label": "Number of availabile websites",
          },
          {
            "Id": "ma0",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "url",
                    "Value": "https://www.swinburne.edu.au",
                  },
                ],
                "MetricName": "PageAvailability",
                "Namespace": "MonitorWebsites",
              },
              "Period": 900,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "ma1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "url",
                    "Value": "https://www.porsche.com/australia",
                  },
                ],
                "MetricName": "PageAvailability",
                "Namespace": "MonitorWebsites",
              },
              "Period": 900,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "ma2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "url",
                    "Value": "https://www.apple.com/au",
                  },
                ],
                "MetricName": "PageAvailability",
                "Namespace": "MonitorWebsites",
              },
              "Period": 900,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 3,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "canary8760AED2": {
      "DependsOn": [
        "canaryiamroleDefaultPolicyE7B68BE6",
        "canaryiamrole1884DA61",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d5f753ca31793578c01f8db6811a07bd6968b6ff3e551875ef1ba08e90c5f499.zip",
        },
        "Environment": {
          "Variables": {
            "BUCKET": {
              "Ref": "project3canarybucket5010CF8B",
            },
            "METRIC_AVAILABILITY_NAME": "PageAvailability",
            "METRIC_BROKENLINKS_NAME": "PageBrokenLinks",
            "METRIC_LATENCY_NAME": "PageExecutionTime",
            "METRIC_NAMESPACE": "MonitorWebsites",
          },
        },
        "Handler": "canary.handler",
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "canaryloggroup1BCB87B1",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "canaryiamrole1884DA61",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "canarybucketdeploymentAwsCliLayer8B1E9611": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "canarybucketdeploymentCustomResourceCF7B4A96": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "project3canarybucket5010CF8B",
        },
        "Prune": true,
        "RetainOnDelete": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "64d191f445d42aa35fee64886c41542ebff3ccc4e857fc22bb1189558627da49.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "canaryiamrole1884DA61": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Canary IAM Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "canaryiamroleDefaultPolicyE7B68BE6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:ListAllMyBuckets",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:CreateLogGroup",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "canaryiamroleDefaultPolicyE7B68BE6",
        "Roles": [
          {
            "Ref": "canaryiamrole1884DA61",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "canarylambdaeventAllowEventRuleTestProject3Stackcanary46EBCC36C9D923E6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "canary8760AED2",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "canarylambdaeventBA55A9B1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "canarylambdaeventBA55A9B1": {
      "Properties": {
        "Description": "Canary run every 5 mins",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "canary8760AED2",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "canaryloggroup1BCB87B1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "canary-log-group",
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "emailtopic3DE2DBFE": {
      "Properties": {
        "DisplayName": "email-topic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "emailtopichoangquang2508gmailcom254F4519": {
      "Properties": {
        "Endpoint": "hoangquang2508@gmail.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "emailtopic3DE2DBFE",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "lambdadynamodbroleD0C7968B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Lambda IAM Role for DynamoDB",
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdadynamodbroleDefaultPolicy66651F02": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:GetItem",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebsiteMonitoringTableC78D4198",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:CreateLogGroup",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdadynamodbroleDefaultPolicy66651F02",
        "Roles": [
          {
            "Ref": "lambdadynamodbroleD0C7968B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "project3canarybucket5010CF8B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "project3-canary-bucket",
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:5c284ed3",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "project3canarybucketAutoDeleteObjectsCustomResource35B847AE": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "project3canarybucketPolicy9813B831",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "project3canarybucket5010CF8B",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "project3canarybucketPolicy9813B831": {
      "Properties": {
        "Bucket": {
          "Ref": "project3canarybucket5010CF8B",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3canarybucket5010CF8B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3canarybucket5010CF8B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "project3cicdbuildprojectEA2471A4": {
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "project3-cicd-build-project",
        "ServiceRole": {
          "Fn::GetAtt": [
            "project3cicdbuildprojectRoleC05E3DF2",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": 0.2,
  "phases": {
    "install": {
      "runtime-versions": {
        "nodejs": 20
      },
      "commands": [
        "npm install"
      ]
    },
    "build": {
      "on-failure": "ABORT",
      "commands": [
        "npm run cdk synth"
      ]
    }
  },
  "artifacts": {
    "base-directory": "cdk.out",
    "files": [
      "*.template.json"
    ]
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "project3cicdbuildprojectRoleC05E3DF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "project3cicdbuildprojectRoleDefaultPolicy87D2B309": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "project3cicdbuildprojectEA2471A4",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "project3cicdbuildprojectEA2471A4",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "project3cicdbuildprojectEA2471A4",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3pipelinebucket78A88A52",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3pipelinebucket78A88A52",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "project3cicdbuildprojectRoleDefaultPolicy87D2B309",
        "Roles": [
          {
            "Ref": "project3cicdbuildprojectRoleC05E3DF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "project3cicdpipelineBuildCodePipelineActionRoleDefaultPolicyA85784EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "project3cicdbuildprojectEA2471A4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "project3cicdpipelineBuildCodePipelineActionRoleDefaultPolicyA85784EA",
        "Roles": [
          {
            "Ref": "project3cicdpipelineBuildCodePipelineActionRoleF61FDFD0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "project3cicdpipelineBuildCodePipelineActionRoleF61FDFD0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateCodePipelineActionRole27DE5AE5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateCodePipelineActionRoleDefaultPolicyE9785EEF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateRoleE10A6A80",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3pipelinebucket78A88A52",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3pipelinebucket78A88A52",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "cloudformation:CreateStack",
                "cloudformation:DescribeStack*",
                "cloudformation:GetStackPolicy",
                "cloudformation:GetTemplate*",
                "cloudformation:SetStackPolicy",
                "cloudformation:UpdateStack",
                "cloudformation:ValidateTemplate",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":cloudformation:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stack/undefined/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateCodePipelineActionRoleDefaultPolicyE9785EEF",
        "Roles": [
          {
            "Ref": "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateCodePipelineActionRole27DE5AE5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateRoleDefaultPolicyD66360EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3pipelinebucket78A88A52",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3pipelinebucket78A88A52",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateRoleDefaultPolicyD66360EA",
        "Roles": [
          {
            "Ref": "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateRoleE10A6A80",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateRoleE10A6A80": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudformation.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "project3cicdpipelineFFF2C1E9": {
      "DependsOn": [
        "project3cicdpipelineRoleDefaultPolicy2C328CA3",
        "project3cicdpipelineRoleADC99B1B",
      ],
      "Properties": {
        "ArtifactStore": {
          "Location": {
            "Ref": "project3pipelinebucket78A88A52",
          },
          "Type": "S3",
        },
        "Name": "project3-cicd-pipeline",
        "RoleArn": {
          "Fn::GetAtt": [
            "project3cicdpipelineRoleADC99B1B",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1",
                },
                "Configuration": {
                  "Branch": "temp",
                  "OAuthToken": "{{resolve:secretsmanager:GitHubToken:SecretString:::}}",
                  "Owner": "Quanghihicoder",
                  "PollForSourceChanges": false,
                  "Repo": "TIP_project3",
                },
                "Name": "Source",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_Source",
                  },
                ],
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "project3cicdbuildprojectEA2471A4",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_Source",
                  },
                ],
                "Name": "Build",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Build_Build",
                  },
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "project3cicdpipelineBuildCodePipelineActionRoleF61FDFD0",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "project3cicdtestproject08E1DB19",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_Source",
                  },
                ],
                "Name": "Test",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "project3cicdpipelineTestCodePipelineActionRoleEE8E56DC",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Test",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Configuration": {
                  "CustomData": "Code Review",
                },
                "Name": "Review",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "project3cicdpipelineManualApprovalReviewCodePipelineActionRole0EC45986",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "ManualApproval",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": {
                    "Fn::GetAtt": [
                      "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateRoleE10A6A80",
                      "Arn",
                    ],
                  },
                  "TemplatePath": "Artifact_Build_Build::Project3Stack.template.json",
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_Build",
                  },
                ],
                "Name": "CloudFormationCreateUpdate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateCodePipelineActionRole27DE5AE5",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "DeployInfrastructure",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "project3cicdpipelineManualApprovalReviewCodePipelineActionRole0EC45986": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "project3cicdpipelineRoleADC99B1B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "project3cicdpipelineRoleDefaultPolicy2C328CA3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3pipelinebucket78A88A52",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3pipelinebucket78A88A52",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "project3cicdpipelineBuildCodePipelineActionRoleF61FDFD0",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "project3cicdpipelineTestCodePipelineActionRoleEE8E56DC",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "project3cicdpipelineManualApprovalReviewCodePipelineActionRole0EC45986",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "project3cicdpipelineDeployInfrastructureCloudFormationCreateUpdateCodePipelineActionRole27DE5AE5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "project3cicdpipelineRoleDefaultPolicy2C328CA3",
        "Roles": [
          {
            "Ref": "project3cicdpipelineRoleADC99B1B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "project3cicdpipelineSourceWebhookResourceB3D8F48D": {
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "{{resolve:secretsmanager:GitHubToken:SecretString:::}}",
        },
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}",
          },
        ],
        "RegisterWithThirdParty": true,
        "TargetAction": "Source",
        "TargetPipeline": {
          "Ref": "project3cicdpipelineFFF2C1E9",
        },
        "TargetPipelineVersion": 1,
      },
      "Type": "AWS::CodePipeline::Webhook",
    },
    "project3cicdpipelineTestCodePipelineActionRoleDefaultPolicy905C1873": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "project3cicdtestproject08E1DB19",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "project3cicdpipelineTestCodePipelineActionRoleDefaultPolicy905C1873",
        "Roles": [
          {
            "Ref": "project3cicdpipelineTestCodePipelineActionRoleEE8E56DC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "project3cicdpipelineTestCodePipelineActionRoleEE8E56DC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "project3cicdtestproject08E1DB19": {
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "project3-cicd-test-project",
        "ServiceRole": {
          "Fn::GetAtt": [
            "project3cicdtestprojectRole2DD21C28",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": 0.2,
  "phases": {
    "install": {
      "runtime-versions": {
        "nodejs": 20
      },
      "commands": [
        "npm install"
      ]
    },
    "build": {
      "on-failure": "ABORT",
      "commands": [
        "npm run test -- -u"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "project3cicdtestprojectRole2DD21C28": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "project3cicdtestprojectRoleDefaultPolicy8F6FDF78": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "project3cicdtestproject08E1DB19",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "project3cicdtestproject08E1DB19",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "project3cicdtestproject08E1DB19",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3pipelinebucket78A88A52",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3pipelinebucket78A88A52",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "project3cicdtestprojectRoleDefaultPolicy8F6FDF78",
        "Roles": [
          {
            "Ref": "project3cicdtestprojectRole2DD21C28",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "project3pipelinebucket78A88A52": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "project3-pipeline-bucket",
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "project3pipelinebucketAutoDeleteObjectsCustomResource0CFF7882": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "project3pipelinebucketPolicy6F6001E1",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "project3pipelinebucket78A88A52",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "project3pipelinebucketPolicy6F6001E1": {
      "Properties": {
        "Bucket": {
          "Ref": "project3pipelinebucket78A88A52",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3pipelinebucket78A88A52",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3pipelinebucket78A88A52",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "project3testbucket5458CA60": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "project3-test-bucket",
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "project3testbucketAutoDeleteObjectsCustomResourceDC7B8ED0": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "project3testbucketPolicyBED4A586",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "project3testbucket5458CA60",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "project3testbucketPolicyBED4A586": {
      "Properties": {
        "Bucket": {
          "Ref": "project3testbucket5458CA60",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "project3testbucket5458CA60",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "project3testbucket5458CA60",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
